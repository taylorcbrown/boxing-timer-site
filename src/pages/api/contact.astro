---
import { createTransport } from 'nodemailer';

interface FormValues {
  name: string;
  email: string;
  message: string;
  honeypot: string;
}

export async function POST({ request }: { request: Request }) {
  const formData = await request.formData();
  const formValues = Object.fromEntries(formData) as FormValues;

  // Spam protection
  if (formValues.honeypot) {
    return new Response(null, { status: 400 });
  }

  // Basic validation
  if (!formValues.name || !formValues.email || !formValues.message) {
    return new Response(null, { status: 400 });
  }

  try {
    const response = await fetch('https://formspree.io/f/xanepkoy', {
      method: 'POST',
      body: formData,
      headers: {
        Accept: 'application/json',
      },
    });

    if (!response.ok) {
      throw new Error('Form submission failed');
    }

    return new Response(null, { status: 200 });
  } catch (error) {
    console.error('Error submitting form:', error);
    return new Response(null, { status: 500 });
  }
}
---
